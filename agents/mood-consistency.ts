import { BaseAgent } from "./base-agent"
import { AgentResult, EvaluationData } from "@/types"
import { llmGateway } from "@/lib/llm-gateway"
import * as fs from "fs"
import * as path from "path"

export class MoodConsistencyAgent extends BaseAgent {
  constructor() {
    super("Mood Consistency Agent")
  }

  async evaluate(data: any): Promise<AgentResult> {
    const startTime = Date.now()

    try {
      // Read the image file for analysis
      const imagePath = path.join(process.cwd(), "public", data.imagePath)
      let imageContent = ""
      if (fs.existsSync(imagePath)) {
        const imageBuffer = fs.readFileSync(imagePath)
        const base64Image = imageBuffer.toString('base64')
        const mimeType = this.getMimeType(imagePath)
        imageContent = `data:${mimeType};base64,${base64Image}`
      }

      // Get brand context if available
      const brandContext = data.brandContext ? `
**Brand Alignment Context:**
- Brand Alignment Score: ${data.brandContext.alignmentScore}/100
- Brand Alignment Analysis: ${data.brandContext.alignmentReasoning}
- Brand Recommendations: ${data.brandContext.recommendations?.join(', ') || 'None'}
` : ''

      const prompt = `
You are a brand psychologist evaluating the emotional impact and mood consistency of AI-generated content. Assess how well this image creates the desired emotional response and maintains brand-appropriate tone.

**Brand Information:**
- Name: ${data.brand.brandName}
- Style: ${data.brand.style}
- Colors: ${data.brand.colors}
- Vision: ${data.brand.brandVision}
- Voice: ${data.brand.brandVoice}
${brandContext}

**Content Context:**
- Intended for: ${data.channel}
- Generated by: ${data.llmModel}
- Based on prompt: "${data.prompt}"

**Evaluation Criteria:**

1. **Emotional Resonance (35%)**: How effectively the image evokes desired feelings?
   - Emotional Authenticity: Genuine emotional expression and connection
   - Mood Consistency: Alignment with intended emotional tone
   - Affective Impact: Strength of emotional response elicited

2. **Brand Tone Alignment (30%)**: How well it matches brand's personality and voice?
   - Personality Expression: Reflection of brand character and values
   - Voice Consistency: Appropriate tone for brand communication
   - Emotional Positioning: Right emotional stance for brand identity

3. **Audience Emotional Connection (25%)**: How well it resonates with target audience?
   - Demographic Resonance: Emotional appeal to target market
   - Cultural Relevance: Appropriate emotional context for audience
   - Engagement Potential: Likelihood to create emotional engagement

4. **Atmospheric Harmony (10%)**: Overall mood and atmosphere coherence?
   - Visual Atmosphere: Consistent mood throughout the image
   - Emotional Coherence: Unified emotional message
   - Contextual Appropriateness: Right mood for the content and channel

**Focus on evaluating the EMOTIONAL IMPACT and MOOD CONSISTENCY of the result.**

Provide scores for each criterion and an overall assessment.
Format your response as JSON:
{
  "criteria": {
    "emotionalResonance": {
      "emotionalAuthenticity": { "score": number, "reasoning": "string" },
      "moodConsistency": { "score": number, "reasoning": "string" },
      "affectiveImpact": { "score": number, "reasoning": "string" },
      "subtotal": number
    },
    "brandToneAlignment": {
      "personalityExpression": { "score": number, "reasoning": "string" },
      "voiceConsistency": { "score": number, "reasoning": "string" },
      "emotionalPositioning": { "score": number, "reasoning": "string" },
      "subtotal": number
    },
    "audienceConnection": {
      "demographicResonance": { "score": number, "reasoning": "string" },
      "culturalRelevance": { "score": number, "reasoning": "string" },
      "engagementPotential": { "score": number, "reasoning": "string" },
      "subtotal": number
    },
    "atmosphericHarmony": {
      "visualAtmosphere": { "score": number, "reasoning": "string" },
      "emotionalCoherence": { "score": number, "reasoning": "string" },
      "contextualAppropriateness": { "score": number, "reasoning": "string" },
      "subtotal": number
    }
  },
  "finalScore": number,
  "reasoning": "string"
}
`

      const messages: any[] = [
        {
          role: "system",
          content: "You are a brand psychologist evaluating emotional impact and mood consistency. Always respond with valid JSON."
        },
        {
          role: "user",
          content: [
            { type: "text", text: prompt }
          ]
        }
      ]

      // Add image if available
      if (imageContent) {
        messages[1].content.push({
          type: "image_url",
          image_url: { url: imageContent }
        })
      }

      const response = await llmGateway.generateWithVision({
        role: "user",
        content: messages[1].content
      }, {
        model: "gpt-4o",
        temperature: 0.3,
        maxTokens: 1500,
        jsonMode: true,
      })

      const evaluation = JSON.parse(response.content)

      // Calculate weighted final score based on new criteria
      const emotionalResonanceScore = (
        evaluation.criteria.emotionalResonance.emotionalAuthenticity.score * 0.4 +
        evaluation.criteria.emotionalResonance.moodConsistency.score * 0.35 +
        evaluation.criteria.emotionalResonance.affectiveImpact.score * 0.25
      )

      const brandToneAlignmentScore = (
        evaluation.criteria.brandToneAlignment.personalityExpression.score * 0.4 +
        evaluation.criteria.brandToneAlignment.voiceConsistency.score * 0.35 +
        evaluation.criteria.brandToneAlignment.emotionalPositioning.score * 0.25
      )

      const audienceConnectionScore = (
        evaluation.criteria.audienceConnection.demographicResonance.score * 0.4 +
        evaluation.criteria.audienceConnection.culturalRelevance.score * 0.35 +
        evaluation.criteria.audienceConnection.engagementPotential.score * 0.25
      )

      const atmosphericHarmonyScore = (
        evaluation.criteria.atmosphericHarmony.visualAtmosphere.score * 0.4 +
        evaluation.criteria.atmosphericHarmony.emotionalCoherence.score * 0.35 +
        evaluation.criteria.atmosphericHarmony.contextualAppropriateness.score * 0.25
      )

      const finalScore = Math.round(
        (emotionalResonanceScore * 0.35) +
        (brandToneAlignmentScore * 0.3) +
        (audienceConnectionScore * 0.25) +
        (atmosphericHarmonyScore * 0.1)
      )

      return {
        score: finalScore,
        reasoning: evaluation.reasoning,
        executionTime: Date.now() - startTime,
        status: "success",
        details: {
          criteria: evaluation.criteria,
          emotionalResonanceScore: Math.round(emotionalResonanceScore),
          brandToneAlignmentScore: Math.round(brandToneAlignmentScore),
          audienceConnectionScore: Math.round(audienceConnectionScore),
          atmosphericHarmonyScore: Math.round(atmosphericHarmonyScore),
          llmResponse: response,
        },
      }
    } catch (error) {
      return {
        score: 0,
        reasoning: `Error evaluating mood consistency: ${error instanceof Error ? error.message : "Unknown error"}`,
        executionTime: Date.now() - startTime,
        status: "error",
        error: error instanceof Error ? error.message : "Unknown error",
      }
    }
  }

  private getMimeType(filePath: string): string {
    const ext = path.extname(filePath).toLowerCase()
    switch (ext) {
      case '.jpg':
      case '.jpeg':
        return 'image/jpeg'
      case '.png':
        return 'image/png'
      case '.gif':
        return 'image/gif'
      case '.webp':
        return 'image/webp'
      default:
        return 'image/jpeg'
    }
  }


}
