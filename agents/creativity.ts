import { BaseAgent } from "./base-agent"
import { AgentResult, EvaluationData } from "@/types"
import { llmGateway } from "@/lib/llm-gateway"
import * as fs from "fs"
import * as path from "path"

export class CreativityAgent extends BaseAgent {
  constructor() {
    super("Creativity Agent")
  }

  async evaluate(data: any): Promise<AgentResult> {
    const startTime = Date.now()

    try {
      // Read the image file for analysis
      const imagePath = path.join(process.cwd(), "public", data.imagePath)
      let imageContent = ""
      if (fs.existsSync(imagePath)) {
        const imageBuffer = fs.readFileSync(imagePath)
        const base64Image = imageBuffer.toString('base64')
        const mimeType = this.getMimeType(imagePath)
        imageContent = `data:${mimeType};base64,${base64Image}`
      }

      // Get brand context if available
      const brandContext = data.brandContext ? `
**Brand Alignment Context:**
- Brand Alignment Score: ${data.brandContext.alignmentScore}/100
- Brand Alignment Analysis: ${data.brandContext.alignmentReasoning}
- Brand Recommendations: ${data.brandContext.recommendations?.join(', ') || 'None'}
` : ''

      const prompt = `
You are a creative director evaluating the artistic and innovative qualities of AI-generated content. Assess how creative and engaging this image is for brand storytelling.

**Brand Information:**
- Name: ${data.brand.brandName}
- Style: ${data.brand.style}
- Colors: ${data.brand.colors}
- Vision: ${data.brand.brandVision}
- Voice: ${data.brand.brandVoice}
${brandContext}

**Content Context:**
- Intended for: ${data.channel}
- Generated by: ${data.llmModel}
- Based on prompt: "${data.prompt}"

**Evaluation Criteria:**

1. **Artistic Innovation (30%)**: How original and creative is the visual approach?
   - Conceptual Originality: Unique ideas and fresh perspectives
   - Visual Creativity: Innovative use of composition, color, and elements
   - Style Innovation: Creative interpretation of artistic direction

2. **Engagement & Impact (30%)**: How compelling and memorable is the result?
   - Visual Appeal: Immediate attractiveness and aesthetic quality
   - Emotional Resonance: Ability to evoke feelings and connect with audience
   - Memorability: Stands out and leaves lasting impression

3. **Brand Storytelling (25%)**: How effectively it serves brand narrative?
   - Message Communication: Clear delivery of brand story or value
   - Audience Connection: Resonates with target demographic
   - Brand Personality: Reflects brand character and tone

4. **Technical Creativity (15%)**: Innovation in execution and production?
   - Compositional Innovation: Creative use of layout and design principles
   - Technical Excellence: Quality of rendering and production values

**Focus on evaluating the CREATIVE MERIT and ENGAGEMENT POWER of the result.**

Provide scores for each criterion and an overall assessment.
Format your response as JSON:
{
  "criteria": {
    "artisticInnovation": {
      "conceptualOriginality": { "score": number, "reasoning": "string" },
      "visualCreativity": { "score": number, "reasoning": "string" },
      "styleInnovation": { "score": number, "reasoning": "string" },
      "subtotal": number
    },
    "engagementImpact": {
      "visualAppeal": { "score": number, "reasoning": "string" },
      "emotionalResonance": { "score": number, "reasoning": "string" },
      "memorability": { "score": number, "reasoning": "string" },
      "subtotal": number
    },
    "brandStorytelling": {
      "messageCommunication": { "score": number, "reasoning": "string" },
      "audienceConnection": { "score": number, "reasoning": "string" },
      "brandPersonality": { "score": number, "reasoning": "string" },
      "subtotal": number
    },
    "technicalCreativity": {
      "compositionalInnovation": { "score": number, "reasoning": "string" },
      "technicalExcellence": { "score": number, "reasoning": "string" },
      "subtotal": number
    }
  },
  "finalScore": number,
  "reasoning": "string"
}
`

      const messages: any[] = [
        {
          role: "system",
          content: "You are a senior creative director evaluating artistic merit and brand engagement. Always respond with valid JSON."
        },
        {
          role: "user",
          content: [
            { type: "text", text: prompt }
          ]
        }
      ]

      // Add image if available
      if (imageContent) {
        messages[1].content.push({
          type: "image_url",
          image_url: { url: imageContent }
        })
      }

      const response = await llmGateway.generateWithVision({
        role: "user",
        content: messages[1].content
      }, {
        model: "gpt-4o",
        temperature: 0.3,
        maxTokens: 1500,
        jsonMode: true,
      })

      const evaluation = JSON.parse(response.content)

      // Calculate weighted final score based on new criteria
      const artisticInnovationScore = (
        evaluation.criteria.artisticInnovation.conceptualOriginality.score * 0.4 +
        evaluation.criteria.artisticInnovation.visualCreativity.score * 0.35 +
        evaluation.criteria.artisticInnovation.styleInnovation.score * 0.25
      )

      const engagementImpactScore = (
        evaluation.criteria.engagementImpact.visualAppeal.score * 0.4 +
        evaluation.criteria.engagementImpact.emotionalResonance.score * 0.35 +
        evaluation.criteria.engagementImpact.memorability.score * 0.25
      )

      const brandStorytellingScore = (
        evaluation.criteria.brandStorytelling.messageCommunication.score * 0.4 +
        evaluation.criteria.brandStorytelling.audienceConnection.score * 0.35 +
        evaluation.criteria.brandStorytelling.brandPersonality.score * 0.25
      )

      const technicalCreativityScore = (
        evaluation.criteria.technicalCreativity.compositionalInnovation.score * 0.6 +
        evaluation.criteria.technicalCreativity.technicalExcellence.score * 0.4
      )

      const finalScore = Math.round(
        (artisticInnovationScore * 0.3) +
        (engagementImpactScore * 0.3) +
        (brandStorytellingScore * 0.25) +
        (technicalCreativityScore * 0.15)
      )

      return {
        score: finalScore,
        reasoning: evaluation.reasoning,
        executionTime: Date.now() - startTime,
        status: "success",
        details: {
          criteria: evaluation.criteria,
          artisticInnovationScore: Math.round(artisticInnovationScore),
          engagementImpactScore: Math.round(engagementImpactScore),
          brandStorytellingScore: Math.round(brandStorytellingScore),
          technicalCreativityScore: Math.round(technicalCreativityScore),
          llmResponse: response,
        },
      }
    } catch (error) {
      return {
        score: 0,
        reasoning: `Error evaluating creativity: ${error instanceof Error ? error.message : "Unknown error"}`,
        executionTime: Date.now() - startTime,
        status: "error",
        error: error instanceof Error ? error.message : "Unknown error",
      }
    }
  }

  private getMimeType(filePath: string): string {
    const ext = path.extname(filePath).toLowerCase()
    switch (ext) {
      case '.jpg':
      case '.jpeg':
        return 'image/jpeg'
      case '.png':
        return 'image/png'
      case '.gif':
        return 'image/gif'
      case '.webp':
        return 'image/webp'
      default:
        return 'image/jpeg'
    }
  }


}
